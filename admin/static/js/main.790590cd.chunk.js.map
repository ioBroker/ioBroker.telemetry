{"version":3,"sources":["Tabs/Options.js","Tabs/States.js","App.js","serviceWorker.js","index.js"],"names":["Options","props","state","className","this","classes","tab","instance","common","native","onError","text","setState","errorText","onLoad","clsx","column","columnSettings","TextField","value","url","type","onChange","e","target","label","I18n","t","helperText","Component","withStyles","theme","width","minHeight","display","verticalAlign","marginRight","selectControl","paddingBottom","propertyName","showHint","toast","error","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","id","action","IconButton","key","aria-label","color","close","onClick","App","extendedProps","translations","require","doNotLoadAllObjects","adapterName","selectedTab","loaded","style","background","themeType","AppBar","position","Tabs","getSelectedTab","index","selectTab","parentNode","dataset","name","Tab","data-name","isIFrame","tabContentIFrame","tabContent","socket","onLoadConfig","attr","cb","updateNativeValue","attributeName","renderError","renderSaveCloseButtons","GenericApp","root","padding","height","overflow","Boolean","window","location","hostname","match","themeName","Utils","getThemeName","console","log","version","host","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.790590cd.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from '@iobroker/adapter-react/Components/Logo';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    selectControl: {\n        width: 200,\n        paddingBottom: 20,\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n        };\n    }\n\n    render() {\n        return <form className={this.props.classes.tab}>\n            <Logo\n                instance={this.props.instance}\n                common={this.props.common}\n                native={this.props.native}\n                onError={text => this.setState({errorText: text})}\n                onLoad={this.props.onLoad}\n            />\n            <div className={clsx(this.props.classes.column, this.props.classes.columnSettings)}>\n                <TextField\n                    value={this.props.native.url}\n                    type=\"number\"\n                    onChange={e => this.props.onChange('url', e.target.value)}\n                    label={I18n.t('URL Server')}\n                    helperText={I18n.t('Server')}\n                />\n            </div>\n        </form>;\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport {MdClose as IconClose} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Message from '@iobroker/adapter-react/Dialogs/Message';\n\nconst styles = theme => ({\n\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n        this.propertyName = 'resources';\n\n        this.state = {\n            showHint: false,\n            toast: '',\n            error: false,\n        };\n    }\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    renderHint() {\n        if (this.state.showHint) {\n            return <Message text={I18n.t('Click now Get new connection certificates to request new temporary password')} onClose={() => this.setState({showHint: false})}/>;\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return <div>Template</div>;\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    theme: PropTypes.object.isRequired,\n    themeType: PropTypes.string,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onChange: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React from 'react';\r\nimport {MuiThemeProvider, withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabStates from './Tabs/States';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        extendedProps.doNotLoadAllObjects = true;\r\n        extendedProps.adapterName = 'consumption';\r\n\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'undefined' || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'states') {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType}/>\r\n            </MuiThemeProvider>;\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.themeType === 'dark' ? '#000' : '#FFF'}}>\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                        <Tab label={I18n.t('Options')}   data-name=\"options\" />\r\n                        <Tab label={I18n.t('States')} data-name=\"states\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n\r\n                <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                    {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\r\n                        key=\"options\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        theme={this.state.themeType}\r\n                        onError={text => this.setState({errorText: text})}\r\n                        onLoad={native => this.onLoadConfig(native)}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    />)}\r\n                    {this.state.selectedTab === 'states' && <TabStates\r\n                        key=\"resources\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        themeType={this.state.themeType}\r\n                        attributeName=\"resources\"\r\n                        theme={this.state.theme}\r\n                        native={this.state.native}\r\n                        onError={text => this.setState({errorText: text})}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    />}\r\n                </div>\r\n                {this.renderError()}\r\n                {this.renderSaveCloseButtons()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/browser';\nimport * as SentryIntegrations from '@sentry/integrations';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {version} from '../package.json';\nimport theme from '@iobroker/adapter-react/Theme';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nwindow.adapterName = 'consumption';\nlet themeName = Utils.getThemeName();\n\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\n\nfunction build() {\n    return ReactDOM.render(\n        <MuiThemeProvider theme={theme(themeName)}>\n            <App\n                onThemeChange={_theme => {\n                    themeName = _theme;\n                    build();\n                }}\n            />\n        </MuiThemeProvider>,\n        document.getElementById('root')\n    );\n}\n\nif (window.location.host !== 'localhost:3000' && false) {\n    Sentry.init({\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\n        release: 'iobroker.' + window.adapterName + '@' + version,\n        integrations: [\n            new SentryIntegrations.Dedupe()\n        ]\n    });\n}\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}