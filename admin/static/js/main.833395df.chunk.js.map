{"version":3,"sources":["Tabs/Options.js","Components/TreeTable.js","Tabs/Objects.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","tab","width","minHeight","column","display","verticalAlign","marginRight","columnSettings","selectControl","paddingBottom","props","className","classes","instance","common","native","onError","text","onLoad","clsx","TextField","value","url","onChange","e","target","label","I18n","t","helperText","roles","map","role","key","type","getAttr","obj","attr","lookup","split","length","shift","descendingComparator","a","b","orderBy","_a","_b","TreeTable","opened","window","localStorage","getItem","name","JSON","parse","Array","isArray","state","editMode","deleteMode","editData","order","columns","field","useTable","showSelectColor","item","col","val","this","renderCellEditSelect","editComponent","renderCellEditCustom","renderCellEditBoolean","renderCellEditColor","renderCellEditObjectID","renderCellEditString","Select","setState","Object","keys","v","MenuItem","fieldEdit","fullWidth","undefined","EditComponent","rowData","newVal","Checkbox","checked","inputProps","Dialog","root","colorDialog","paper","onClose","selectCallback","open","color","selectIdValue","_val","fieldEditWithButton","style","backgroundColor","Utils","isUseBright","IconButton","fieldButton","contained","onClick","newColor","showSelectId","imagePrefix","dialogName","adapterName","themeType","socket","statesOnly","selected","onOk","level","i","editable","TableCell","cell","cellSecondary","cellStyle","component","renderCellEdit","data","indexOf","parentId","children","filter","it","id","includes","TableRow","row","rowSecondary","rowMainWithChildren","rowMainWithoutChildren","rowNoEdit","cellExpand","pos","push","sort","splice","setItem","stringify","scope","ii","hidden","renderCell","onUpdate","cellButton","disabled","newData","forEach","setAttr","onDelete","renderLine","property","isAsc","TableHead","cellHeader","replace","headerStyle","sortDirection","TableSortLabel","active","direction","handleRequestSort","title","visuallyHidden","noAdd","Fab","size","find","table","array","comparator","stabilizedThis","el","index","stableSort","getComparator","tableContainer","Table","aria-label","stickyHeader","renderHead","TableBody","renderSelectIdDialog","renderSelectColorDialog","React","Component","height","overflow","minWidth","maxWidth","paddingTop","paddingLeft","paddingRight","opacity","fontWeight","background","palette","wordBreak","whiteSpace","width_name_nicknames","width_ioType","width_type","width_displayTraits","width_roomHint","fontStyle","fontSize","border","clip","margin","padding","position","top","lineHeight","0","1","Objects","onAliveChanged","alive","onUpdatesDetected","timer","clearTimeout","setTimeout","browse","propertyName","showHint","toast","telemetryObjects","getState","then","newState","sendTo","result","error","subscribeState","unsubscribeState","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","message","action","close","lang","getLanguage","values","object","custom","_id","getObjectNameFromObj","debounce","ignore","lastEvent","moment","format","eventsInHour","oldData","console","log","getObject","namespace","setObject","App","extendedProps","translations","require","doNotLoadAllObjects","selectedTab","loaded","AppBar","Tabs","getSelectedTab","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","errorText","cb","updateNativeValue","renderError","renderSaveCloseButtons","GenericApp","Boolean","location","hostname","match","themeName","getThemeName","version","host","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.833395df.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 370px)',\r\n    },\r\n    selectControl: {\r\n        width: 200,\r\n        paddingBottom: 20,\r\n    }\r\n});\r\n\r\nconst Options = (props) => {\r\n    return <form className={props.classes.tab}>\r\n        <Logo\r\n            instance={ props.instance }\r\n            common={ props.common }\r\n            native={ props.native }\r\n            onError={ text => {}/*setState({errorText: text})*/ }\r\n            onLoad={ props.onLoad }\r\n        />\r\n        <div className={clsx(props.classes.column, props.classes.columnSettings)}>\r\n            <TextField\r\n                value={props.native.url}\r\n                onChange={e => props.onChange('url', e.target.value)}\r\n                label={I18n.t('URL Server')}\r\n                helperText={I18n.t('Server')}\r\n            />\r\n        </div>\r\n        <h2>{I18n.t('De-bounces')}</h2>\r\n        {props.roles.map(role =>\r\n            <div key={role} className={clsx(props.classes.column, props.classes.columnSettings)}>\r\n                <TextField\r\n                    value={props.native[role + '_debounce']}\r\n                    type=\"number\"\r\n                    onChange={e => props.onChange(role + '_debounce', e.target.value)}\r\n                    label={I18n.t(role) + ' ' + I18n.t('debounce')}\r\n                />\r\n            </div>\r\n        )}\r\n    </form>;\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { HexColorPicker as ColorPicker } from 'react-colorful';\r\nimport 'react-colorful/dist/index.css';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport IconEdit from '@material-ui/icons/Edit';\r\nimport IconDelete from '@material-ui/icons/Delete';\r\nimport IconExpand from '@material-ui/icons/NavigateNext';\r\nimport IconCollapse from '@material-ui/icons/ExpandMore';\r\nimport IconCheck from '@material-ui/icons/Check';\r\nimport IconClose from '@material-ui/icons/Close';\r\nimport IconAdd from '@material-ui/icons/Add';\r\nimport IconList from '@material-ui/icons/ViewHeadline';\r\nimport IconColor from '@material-ui/icons/Colorize';\r\n\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nfunction getAttr(obj, attr, lookup) {\r\n    if (typeof attr === 'string') {\r\n        attr = attr.split('.');\r\n    }\r\n\r\n    if (!obj) {\r\n        return null;\r\n    }\r\n\r\n    if (attr.length === 1) {\r\n        if (lookup && lookup[obj[attr[0]]]) {\r\n            return lookup[obj[attr[0]]];\r\n        } else {\r\n            return obj[attr[0]];\r\n        }\r\n    } else {\r\n        const name = attr.shift();\r\n        return getAttr(obj[name], attr);\r\n    }\r\n}\r\n\r\nfunction setAttr(obj, attr, value) {\r\n    if (typeof attr === 'string') {\r\n        attr = attr.split('.');\r\n    }\r\n\r\n    if (attr.length === 1) {\r\n        return obj[attr[0]] = value;\r\n    } else {\r\n        const name = attr.shift();\r\n        if (obj[name] === null || obj[name] === undefined) {\r\n            obj[name] = {};\r\n        }\r\n        return setAttr(obj[name], attr, value);\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    tableContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    table: {\r\n        width: '100%',\r\n        minWidth: 800,\r\n        maxWidth: 1920,\r\n    },\r\n    cell: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n        paddingLeft: 4,\r\n        paddingRight: 4,\r\n    },\r\n    rowMainWithChildren: {\r\n\r\n    },\r\n    rowMainWithoutChildren: {\r\n\r\n    },\r\n    rowNoEdit: {\r\n        opacity: 0.3\r\n    },\r\n    cellExpand: {\r\n        width: 30,\r\n    },\r\n    cellButton: {\r\n        width: 30,\r\n    },\r\n    cellHeader: {\r\n        fontWeight: 'bold',\r\n        background: theme.palette.type === 'dark' ? '#888' : '#888',\r\n        color: theme.palette.type === 'dark' ? '#EEE' : '#111',\r\n        height: 48,\r\n        wordBreak: 'break-word',\r\n        whiteSpace: 'pre',\r\n    },\r\n    width_name_nicknames: {\r\n        maxWidth: 150,\r\n    },\r\n    width_ioType: {\r\n        maxWidth: 100,\r\n    },\r\n    width_type: {\r\n        maxWidth: 100,\r\n    },\r\n    width_displayTraits: {\r\n        maxWidth: 100,\r\n    },\r\n    width_roomHint: {\r\n        maxWidth: 100,\r\n    },\r\n    rowSecondary: {\r\n        fontStyle: 'italic',\r\n    },\r\n    cellSecondary: {\r\n        fontSize: 10,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    fieldEditWithButton: {\r\n        width: `calc(100% - 33px)`,\r\n        display: 'inline-block',\r\n    },\r\n    fieldEdit: {\r\n        width: `100%`,\r\n        display: 'inline-block',\r\n        lineHeight: '50px',\r\n        verticalAlign: 'middle',\r\n    },\r\n    fieldButton: {\r\n        width: 30,\r\n        display: 'inline-block',\r\n    },\r\n    colorDialog: {\r\n        overflow: 'hidden',\r\n        padding: 15,\r\n    }\r\n});\r\n\r\nfunction descendingComparator(a, b, orderBy, lookup) {\r\n    const _a = getAttr(a, orderBy, lookup) || '';\r\n    const _b = getAttr(b, orderBy, lookup) || '';\r\n\r\n    if (_b < _a) {\r\n        return -1;\r\n    } else\r\n    if (_b > _a) {\r\n        return 1;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nfunction getComparator(order, orderBy, lookup) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy, lookup)\r\n        : (a, b) => -descendingComparator(a, b, orderBy, lookup);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order) {\r\n            return order;\r\n        } else {\r\n            return a[1] - b[1];\r\n        }\r\n    });\r\n\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nclass TreeTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let opened = window.localStorage.getItem(this.props.name || 'iob-table') || '[]';\r\n        try {\r\n            opened = JSON.parse(opened) || [];\r\n        } catch (e) {\r\n            opened = [];\r\n        }\r\n        if (!Array.isArray(opened)) {\r\n            opened = [];\r\n        }\r\n\r\n        this.state = {\r\n            opened,\r\n            editMode: false,\r\n            deleteMode: false,\r\n            editData: null,\r\n            order: 'asc',\r\n            orderBy: this.props.columns[0].field,\r\n            useTable: false,\r\n            showSelectColor: false\r\n        }\r\n    }\r\n\r\n    renderCellEdit(item, col) {\r\n        let val = getAttr(item, col.field);\r\n        if (Array.isArray(val)) {\r\n            val = val[0];\r\n        }\r\n\r\n        if (col.lookup) {\r\n            return this.renderCellEditSelect(item, col, val);\r\n        } if (col.editComponent) {\r\n            return this.renderCellEditCustom(item, col, val);\r\n        } else {\r\n            if (col.type === 'boolean' || (!col.type && typeof val === 'boolean')) {\r\n                return this.renderCellEditBoolean(item, col, val);\r\n            } else if (col.type === 'color') {\r\n                return this.renderCellEditColor(item, col, val);\r\n            } else if (col.type === 'oid') {\r\n                return this.renderCellEditObjectID(item, col, val);\r\n            } else {\r\n                return this.renderCellEditString(item, col, val);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderCellEditSelect(item, col, val) {\r\n        return <Select\r\n            onChange={e => {\r\n                const editData = this.state.editData ? {...this.state.editData} : {};\r\n                if (e.target.value === val) {\r\n                    delete editData[col.field];\r\n                } else {\r\n                    editData[col.field] = e.target.value;\r\n                }\r\n                this.setState({editData});\r\n            }}\r\n            value={(this.state.editData && this.state.editData[col.field]) || val}\r\n        >\r\n            {Object.keys(col.lookup).map(v => <MenuItem value={v}>{col.lookup[v]}</MenuItem>)}\r\n        </Select>;\r\n    }\r\n\r\n    renderCellEditString(item, col, val) {\r\n        return <TextField\r\n            className={this.props.classes.fieldEdit}\r\n            fullWidth\r\n            value={this.state.editData && this.state.editData[col.field] !== undefined ? this.state.editData[col.field] : val}\r\n            onChange={e => {\r\n                const editData = this.state.editData ? {...this.state.editData} : {};\r\n                if (e.target.value === val) {\r\n                    delete editData[col.field];\r\n                } else {\r\n                    editData[col.field] = e.target.value;\r\n                }\r\n                this.setState({editData});\r\n            }}\r\n        />;\r\n    }\r\n\r\n    renderCellEditCustom(item, col, val) {\r\n        const EditComponent = col.editComponent;\r\n\r\n        return <EditComponent\r\n            value={val}\r\n            rowData={item}\r\n            onChange={newVal => {\r\n                const editData = this.state.editData ? {...this.state.editData} : {};\r\n                if (newVal === val) {\r\n                    delete editData[col.field];\r\n                } else {\r\n                    editData[col.field] = newVal;\r\n                }\r\n                this.setState({editData});\r\n            }}\r\n        />;\r\n    }\r\n\r\n    renderCellEditBoolean(item, col, val) {\r\n        return <Checkbox\r\n            checked={this.state.editData && this.state.editData[col.field] !== undefined ? !!this.state.editData[col.field] : !!val}\r\n            onChange={e => {\r\n                const editData = this.state.editData ? {...this.state.editData} : {};\r\n                if (e.target.checked === !!val) {\r\n                    delete editData[col.field];\r\n                } else {\r\n                    editData[col.field] = e.target.checked;\r\n                }\r\n                this.setState({editData});\r\n            }}\r\n            inputProps={{ 'aria-label': 'checkbox' }}\r\n        />;\r\n    }\r\n\r\n    renderSelectColorDialog() {\r\n        return <Dialog\r\n            classes={{root: this.props.classes.colorDialog, paper: this.props.classes.colorDialog}}\r\n            onClose={() => {\r\n                this.selectCallback = null;\r\n                this.setState({showSelectColor: false});\r\n            }}\r\n            open={this.state.showSelectColor}>\r\n            <ColorPicker\r\n                color={this.state.selectIdValue}\r\n                onChange={color => {\r\n                    this.setState({selectIdValue: color}, () =>\r\n                        this.selectCallback && this.selectCallback(color));\r\n                }}\r\n            />\r\n        </Dialog>;\r\n    }\r\n\r\n    renderCellEditColor(item, col, val) {\r\n        const _val = this.state.editData && this.state.editData[col.field] !== undefined ? this.state.editData[col.field] : val;\r\n        return <div className={this.props.classes.fieldEdit}>\r\n            <TextField\r\n                fullWidth\r\n                className={this.props.classes.fieldEditWithButton}\r\n                value={_val}\r\n                inputProps={{style: {backgroundColor: _val, color: Utils.isUseBright(_val, null) ? '#FFF' : '#000'}}}\r\n                onChange={e => {\r\n                    const editData = this.state.editData ? {...this.state.editData} : {};\r\n                    if (e.target.value === val) {\r\n                        delete editData[col.field];\r\n                    } else {\r\n                        editData[col.field] = e.target.value;\r\n                    }\r\n                    this.setState({editData});\r\n                }}\r\n            />\r\n\r\n            <IconButton\r\n                className={this.props.classes.fieldButton}\r\n                contained\r\n                onClick={() => {\r\n                    this.selectCallback = newColor => {\r\n                        const editData = this.state.editData ? {...this.state.editData} : {};\r\n                        if (newColor === val) {\r\n                            delete editData[col.field];\r\n                        } else {\r\n                            editData[col.field] = newColor;\r\n                        }\r\n                        this.setState({editData});\r\n                    };\r\n\r\n                    this.setState({showSelectColor: true, selectIdValue: val});\r\n                }}\r\n            ><IconColor/></IconButton>\r\n        </div>;\r\n    }\r\n\r\n    renderSelectIdDialog() {\r\n        if (this.state.showSelectId) {\r\n            return <DialogSelectID\r\n                key=\"tableSelect\"\r\n                imagePrefix=\"../..\"\r\n                dialogName={this.props.adapterName}\r\n                themeType={this.props.themeType}\r\n                socket={this.props.socket}\r\n                statesOnly={true}\r\n                selected={this.state.selectIdValue}\r\n                onClose={() => this.setState({showSelectId: false})}\r\n                onOk={(selected, name) => {\r\n                    this.setState({showSelectId: false, selectIdValue: null});\r\n                    this.selectCallback && this.selectCallback(selected);\r\n                    this.selectCallback = null;\r\n                }}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderCellEditObjectID(item, col, val) {\r\n        return <div className={this.props.classes.fieldEdit}>\r\n            <TextField\r\n                fullWidth\r\n                className={this.props.classes.fieldEditWithButton}\r\n                value={this.state.editData && this.state.editData[col.field] !== undefined ? this.state.editData[col.field] : val}\r\n                onChange={e => {\r\n                    const editData = this.state.editData ? {...this.state.editData} : {};\r\n                    if (e.target.value === val) {\r\n                        delete editData[col.field];\r\n                    } else {\r\n                        editData[col.field] = e.target.value;\r\n                    }\r\n                    this.setState({editData});\r\n                }}\r\n            />\r\n\r\n            <IconButton\r\n                className={this.props.classes.fieldButton}\r\n                contained\r\n                onClick={() => {\r\n                    this.selectCallback = selected => {\r\n                        const editData = this.state.editData ? {...this.state.editData} : {};\r\n                        if (selected === val) {\r\n                            delete editData[col.field];\r\n                        } else {\r\n                            editData[col.field] = selected;\r\n                        }\r\n                        this.setState({editData});\r\n                    };\r\n\r\n                    this.setState({showSelectId: true, selectIdValue: val});\r\n                }}\r\n            ><IconList/></IconButton>\r\n        </div>;\r\n    }\r\n\r\n    renderCell(item, col, level, i) {\r\n        if (this.state.editMode === i && col.editable !== 'never' && col.editable !== false) {\r\n            return <TableCell\r\n                key={col.field}\r\n                className={Utils.clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\r\n                style={col.cellStyle}\r\n                component=\"th\"\r\n            >\r\n                {this.renderCellEdit(item, col)}\r\n            </TableCell>;\r\n        } else {\r\n            return <TableCell\r\n                key={col.field}\r\n                className={Utils.clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\r\n                style={col.cellStyle}\r\n                component=\"th\" >{getAttr(item, col.field, col.lookup)}</TableCell>;\r\n        }\r\n    }\r\n\r\n    renderLine(item, level) {\r\n        level = level || 0;\r\n        const i = this.props.data.indexOf(item);\r\n        if (!item) {\r\n            return null;\r\n        }\r\n        if (!level && item.parentId) {\r\n            return null;\r\n        } else if (level && !item.parentId) {\r\n            return null; // should never happens\r\n        } else {\r\n            // try to find children\r\n            const children = this.props.data.filter(it => it.parentId === item.id);\r\n            const opened = this.state.opened.includes(item.id);\r\n\r\n            return [\r\n                <TableRow\r\n                    key={item.id}\r\n                    className={Utils.clsx(\r\n                        this.props.classes.row,\r\n                        level  && this.props.classes.rowSecondary,\r\n                        !level && children.length && this.props.classes.rowMainWithChildren,\r\n                        !level && !children.length && this.props.classes.rowMainWithoutChildren,\r\n                        this.state.editMode !== false && this.state.editMode !== i && this.props.classes.rowNoEdit,\r\n                        this.state.deleteMode !== false && this.state.deleteMode !== i && this.props.classes.rowNoEdit,\r\n                    )}\r\n                >\r\n                    <TableCell className={Utils.clsx(this.props.classes.cell, this.props.classes.cellExpand, level && this.props.classes.cellSecondary)}>\r\n                        {children.length ? <IconButton onClick={() => {\r\n                            const opened = [...this.state.opened];\r\n                            const pos = opened.indexOf(item.id);\r\n                            if (pos === -1) {\r\n                                opened.push(item.id);\r\n                                opened.sort();\r\n                            } else {\r\n                                opened.splice(pos, 1);\r\n                            }\r\n\r\n                            window.localStorage.setItem(this.props.name || 'iob-table', JSON.stringify(opened));\r\n\r\n                            this.setState({opened});\r\n                        }}>\r\n                            {opened ? <IconCollapse/> : <IconExpand/>}\r\n                        </IconButton>  : null}\r\n                    </TableCell>\r\n                    <TableCell scope=\"row\"\r\n                               className={Utils.clsx(this.props.classes.cell, level && this.props.classes.cellSecondary)}\r\n                               style={this.props.columns[0].cellStyle}>\r\n                        {getAttr(item, this.props.columns[0].field, this.props.columns[0].lookup)}\r\n                    </TableCell>\r\n\r\n                    {this.props.columns.map((col, ii) =>\r\n                        !ii && !col.hidden ? null : this.renderCell(item, col, level, i))}\r\n\r\n                    {this.props.onUpdate ? <TableCell className={Utils.clsx(this.props.classes.cell, this.props.classes.cellButton)}>\r\n                        {this.state.editMode === i || this.state.deleteMode === i ?\r\n                            <IconButton\r\n                                disabled={this.state.editMode !== false && (!this.state.editData || !Object.keys(this.state.editData).length)}\r\n                                onClick={() => {\r\n                                    if (this.state.editMode !== false) {\r\n                                        const newData = JSON.parse(JSON.stringify(item));\r\n                                        Object.keys(this.state.editData).forEach(attr => setAttr(newData, attr, this.state.editData[attr]));\r\n                                        this.setState({editMode: false}, () => this.props.onUpdate(newData, item))\r\n                                    } else {\r\n                                        this.setState({deleteMode: false}, () => this.props.onDelete(item))\r\n                                    }\r\n                                }}>\r\n                                <IconCheck/>\r\n                            </IconButton>\r\n                            :\r\n                            <IconButton\r\n                                disabled={this.state.editMode !== false}\r\n                                onClick={() => this.setState({editMode: i, editData: null})}>\r\n                                <IconEdit/>\r\n                            </IconButton>}\r\n                    </TableCell> : null}\r\n                    {this.props.onDelete ? <TableCell className={Utils.clsx(this.props.classes.cell, this.props.classes.cellButton)}>\r\n                        {this.state.editMode === i || this.state.deleteMode === i ?\r\n                            <IconButton onClick={() => this.setState({editMode: false, deleteMode: false})}>\r\n                                <IconClose/>\r\n                            </IconButton>\r\n                            :\r\n                            <IconButton\r\n                                disabled={this.state.deleteMode !== false}\r\n                                onClick={() => this.setState({deleteMode: i})}>\r\n                                <IconDelete/>\r\n                            </IconButton>\r\n                        }\r\n                    </TableCell> : null}\r\n                </TableRow>,\r\n                !level && this.state.opened.includes(item.id) ? children.map(item => this.renderLine(item, level + 1)) : null,\r\n            ];\r\n        }\r\n    }\r\n\r\n    handleRequestSort(property) {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\r\n    }\r\n\r\n    renderHead() {\r\n        return <TableHead>\r\n            <TableRow key=\"headerRow\">\r\n                <TableCell\r\n                    component=\"th\"\r\n                    className={Utils.clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellExpand)}\r\n                />\r\n                <TableCell\r\n                    component=\"th\"\r\n                    className={Utils.clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes['width_' + this.props.columns[0].field.replace(/\\./g, '_')])}\r\n                    style={this.props.columns[0].headerStyle || this.props.columns[0].cellStyle}\r\n                    sortDirection={this.state.orderBy === this.props.columns[0].field ? this.state.order : false}\r\n                >\r\n                    <TableSortLabel\r\n                        active={this.state.orderBy === this.props.columns[0].field}\r\n                        direction={this.state.orderBy === this.props.columns[0].field ? this.state.order : 'asc'}\r\n                        onClick={() => this.handleRequestSort(this.props.columns[0].field)}\r\n                    >\r\n                        {this.props.columns[0].title || this.props.columns[0].field}\r\n                        {this.state.orderBy === this.props.columns[0].field ?\r\n                            <span className={this.props.classes.visuallyHidden}>\r\n                                {this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                            </span> : null}\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n                {this.props.columns.map((col, i) =>\r\n                    !i && !col.hidden ? null : <TableCell\r\n                        key={col.field}\r\n                        className={Utils.clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes['width_' + col.field.replace(/\\./g, '_')])}\r\n                        style={col.headerStyle || col.cellStyle}\r\n                        component=\"th\"\r\n                    >\r\n                        <TableSortLabel\r\n                            active={this.state.orderBy === col.field}\r\n                            direction={this.state.orderBy === col.field ? this.state.order : 'asc'}\r\n                            onClick={() => this.handleRequestSort(col.field)}\r\n                        >\r\n                            {col.title || col.field}\r\n                            {this.state.orderBy === col.field ?\r\n                                <span className={this.props.classes.visuallyHidden}>\r\n                                    {this.state.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span> : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>)}\r\n                {this.props.onUpdate ? <TableCell component=\"th\" className={Utils.clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellButton)}>\r\n                    {!this.props.noAdd ? <Fab\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        disabled={this.state.editMode !== false}\r\n                        onClick={() => this.props.onUpdate(true)}>\r\n                        <IconAdd/>\r\n                    </Fab>: null }\r\n                </TableCell> : null}\r\n                {this.props.onDelete ? <TableCell component=\"th\" className={Utils.clsx(this.props.classes.cell, this.props.classes.cellHeader, this.props.classes.cellButton)}/> : null}\r\n            </TableRow>\r\n        </TableHead>;\r\n    }\r\n\r\n    render() {\r\n        const lookup = this.props.columns.find(col => col.field === this.state.orderBy).lookup;\r\n        const table = stableSort(this.props.data, getComparator(this.state.order, this.state.orderBy, lookup));\r\n\r\n        return <div className={Utils.clsx(this.props.classes.tableContainer, this.props.className)}>\r\n            <Table className={this.props.classes.table} aria-label=\"simple table\" size=\"small\" stickyHeader={true}>\r\n                {this.renderHead()}\r\n                <TableBody>\r\n                    {table.map(item => this.renderLine(item))}\r\n                </TableBody>\r\n            </Table>\r\n            {this.renderSelectIdDialog()}\r\n            {this.renderSelectColorDialog()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\nconst columns = [\r\n    {\r\n        title: 'Name of field', // required, else it will be \"field\"\r\n        field: 'fieldIdInData', // required\r\n        editable: false,        // or true [default - true]\r\n        cellStyle: {            // CSS style - // optional\r\n            maxWidth: '12rem',\r\n            overflow: 'hidden',\r\n            wordBreak: 'break-word'\r\n        },\r\n        lookup: {               // optional => edit will be automatically \"SELECT\"\r\n            'value1': 'text1',\r\n            'value2': 'text2',\r\n        }\r\n    },\r\n    {\r\n        title: 'Type',          // required, else it will be \"field\"\r\n        field: 'myType',        // required\r\n        editable: true,         // or true [default - true]\r\n        lookup: {               // optional => edit will be automatically \"SELECT\"\r\n            'number': 'Number',\r\n            'string': 'String',\r\n            'boolean': 'Boolean',\r\n        },\r\n        type: 'number/string/color/oid/icon/boolean', // oid=ObjectID,icon=base64-icon\r\n        editComponent: props =>\r\n            <div>Prefix&#123; <br/>\r\n                <textarea\r\n                    rows={4}\r\n                    style={{width: '100%', resize: 'vertical'}}\r\n                    value={props.value}\r\n                    onChange={e => props.onChange(e.target.value)}\r\n                />\r\n                Suffix\r\n            </div>,\r\n    },\r\n];\r\n*/\r\n/* const data = [\r\n    {\r\n        id: 'UniqueID1' // required\r\n        fieldIdInData: 'Name1',\r\n        myType: 'number',\r\n    },\r\n    {\r\n        id: 'UniqueID2' // required\r\n        fieldIdInData: 'Name12',\r\n        myType: 'string',\r\n    },\r\n];\r\n */\r\n\r\n/*\r\n// STYLES\r\nconst styles = theme => ({\r\n    tableDiv: {\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n        height: 'calc(100% - 48px)',\r\n    },\r\n});\r\n// renderTable\r\nrenderTable() {\r\n    return <div className={this.props.classes.tableDiv}>\r\n        <TreeTable\r\n            columns={this.columns}\r\n            data={lines}\r\n            onUpdate={(newData, oldData) => console.log('Update: ' + JSON.stringify(newData))}\r\n            onDelete={oldData => console.log('Delete: ' + JSON.stringify(oldData))}\r\n        />\r\n    </div>;\r\n}\r\n */\r\n\r\nTreeTable.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    className: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n    name: PropTypes.string, // name of table to save settings in localStorage\r\n    columns: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            cellStyle: PropTypes.object,\r\n            editComponent: PropTypes.element,\r\n            field: PropTypes.string,\r\n            headerStyle: PropTypes.object,\r\n            hidden: PropTypes.bool,\r\n            lookup: PropTypes.object,\r\n            editable: PropTypes.bool,\r\n            title: PropTypes.string,\r\n            type: PropTypes.oneOf([\r\n                'string',\r\n                'boolean',\r\n                'numeric',\r\n                'icon', // todo: not yet implemented\r\n                'oid',\r\n                'color',\r\n            ]),\r\n        })\r\n    ).isRequired,\r\n    noSort: PropTypes.bool, // todo\r\n    onUpdate: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    noAdd: PropTypes.bool, // hide add button\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object // only if oid type is used\r\n};\r\n\r\nexport default withStyles(styles)(TreeTable);","import React, {Component} from 'react';\r\nimport moment from 'moment';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Message from '@iobroker/adapter-react/Dialogs/Message';\r\n\r\nimport TreeTable from '../Components/TreeTable';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nconst styles = theme => ({\r\n});\r\n\r\nconst columns = [\r\n    {\r\n        title: I18n.t('ID'),\r\n        field: 'id',\r\n        editable: false\r\n    },\r\n    {\r\n        title: I18n.t('Name'),\r\n        field: 'name',\r\n        editable: false\r\n    },\r\n    {\r\n        title: I18n.t('Type'),\r\n        field: 'type',\r\n        editable: false\r\n    },\r\n    {\r\n        title: I18n.t('Debounce'),\r\n        field: 'debounce'\r\n    },\r\n    {\r\n        title: I18n.t('Ignore'),\r\n        field: 'ignore',\r\n        lookup: {\r\n            0: I18n.t('No ignore'),\r\n            1: I18n.t('Ignore'),\r\n        }\r\n    },\r\n    {\r\n        title: I18n.t('Last event'),\r\n        field: 'lastEvent',\r\n        editable: false\r\n    },\r\n    {\r\n        title: I18n.t('Events in hour'),\r\n        field: 'eventsInHour',\r\n        editable: false\r\n    },\r\n];\r\n\r\nclass Objects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.propertyName = 'resources';\r\n\r\n        this.state = {\r\n            showHint: false,\r\n            toast: '',\r\n            alive: false,\r\n            telemetryObjects: [],\r\n        };\r\n\r\n        this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`)\r\n            .then(state => {\r\n                const newState = {alive: state && state.val};\r\n                if (newState.alive) {\r\n                    this.browse();\r\n                } else {\r\n                    this.setState(newState);\r\n                }\r\n            });\r\n    }\r\n\r\n    browse() {\r\n        return this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'browse', null)\r\n            .then(result => {\r\n                if (result.result) {\r\n                    this.setState({telemetryObjects: result.result});\r\n                } else {\r\n                    this.setState({toast: I18n.t('Cannot get list:') + (result.error || 'see ioBroker log')});\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.data.update`, this.onUpdatesDetected);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`, this.onAliveChanged);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.data.update`, this.onUpdatesDetected);\r\n    }\r\n\r\n    onAliveChanged = (id, state) => {\r\n        this.setState({alive: state ? !!state.val : false});\r\n    }\r\n\r\n    onUpdatesDetected = () => {\r\n        this.timer && clearTimeout(this.timer)\r\n        this.timer = setTimeout(() => {\r\n            this.timer = null;\r\n            this.browse();\r\n        }, 500);\r\n    }\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    renderHint() {\r\n        if (this.state.showHint) {\r\n            return <Message text={I18n.t('Click now Get new connection certificates to request new temporary password')} onClose={() => this.setState({showHint: false})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.alive) {\r\n            return <p>{I18n.t('Please start the instance first!')}</p>;\r\n        }\r\n        const lang = I18n.getLanguage();\r\n\r\n        const data = Object.values(this.state.telemetryObjects).map(object => {\r\n            const custom = object.common.custom ? object.common.custom[this.props.adapterName + '.' + this.props.instance] || {} : {};\r\n            return {\r\n                id: object._id,\r\n                name: Utils.getObjectNameFromObj(object, lang),\r\n                type: object.common.role,\r\n                debounce: custom.debounce ? custom.debounce : this.props.native[object.common.role + '_debounce'] || 0,\r\n                ignore: custom.ignore ? custom.ignore : 0,\r\n                lastEvent: custom.lastEvent ? moment(custom.lastEvent).format('YYYY-MM-DD HH:mm:ss') : null,\r\n                eventsInHour: custom.eventsInHour ? custom.eventsInHour.length : null,\r\n            }\r\n        });\r\n        return <TreeTable\r\n            noAdd={true}\r\n            data={data}\r\n            columns={columns}\r\n            onUpdate={(newData, oldData) => {\r\n                console.log('Update: ' + JSON.stringify(newData));\r\n                this.props.socket.getObject(newData.id)\r\n                    .then(obj => {\r\n                        const namespace = this.props.adapterName + '.' + this.props.instance;\r\n                        obj.common.custom = obj.common.custom || {};\r\n                        obj.common.custom[namespace] = obj.common.custom[namespace] || {};\r\n                        // todo\r\n                        return this.props.socket.setObject(obj.id, obj);\r\n                    });\r\n            }}\r\n        />;\r\n    }\r\n}\r\n\r\nObjects.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    socket: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Objects);\r\n","import React from 'react';\r\nimport {MuiThemeProvider, withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabObjects from './Tabs/Objects';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nconst roles = [\r\n    'sensor.motion',\r\n    'sensor.rain',\r\n    'sensor.lock',\r\n    'button.*',\r\n    'value.window',\r\n    'value.temperature',\r\n    'level.temperature',\r\n    'value.humidity',\r\n    'value.blood.sugar',\r\n    'level.co2',\r\n    'level.co2',\r\n    'value.health.*'\r\n];\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        extendedProps.doNotLoadAllObjects = true;\r\n        extendedProps.adapterName = 'telemetry';\r\n\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'undefined' || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'objects') {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    /*async onPrepareLoad(adapterSettings) {\r\n        let settings = await this.socket.getObject('telemetry.0.settings');\r\n\r\n        let telemetryObjects = {};\r\n        if (settings) {\r\n            for (let i in settings.native.telemetryObjects) {\r\n                let _id = settings.native.telemetryObjects[i];\r\n                telemetryObjects[_id] = await this.socket.getObject(_id);\r\n            }\r\n        }\r\n        this.setState({telemetryObjects});\r\n    }\r\n\r\n    onPrepareSave() {\r\n        Object.keys(this.state.telemetryObjects).forEach(_id =>\r\n            this.socket.setObject(_id, this.state.telemetryObjects[_id])\r\n        );\r\n\r\n    updateTelemetryObject = (data) => {\r\n        let newObjects = JSON.parse(JSON.stringify(this.state.telemetryObjects));\r\n        newObjects[data.id].common.custom['telemetry.0'].ignore = data.ignore;\r\n        newObjects[data.id].common.custom['telemetry.0'].debounce = data.debounce;\r\n        this.setState({telemetryObjects: newObjects, changed: true});\r\n    }*/\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType}/>\r\n            </MuiThemeProvider>;\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.themeType === 'dark' ? '#000' : '#FFF'}}>\r\n                <AppBar position=\"static\">\r\n\r\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                        <Tab label={I18n.t('Options')} data-name=\"options\" />\r\n                        <Tab label={I18n.t('Objects')}  data-name=\"objects\" />\r\n                        {/*this.state.selectedTab === 'objects' ? <IconButton onClick={() => this.onPrepareLoad(this.state.native)}>\r\n                            <RefreshIcon htmlColor=\"white\"/>\r\n                        </IconButton> : null*/}\r\n                    </Tabs>\r\n                </AppBar>\r\n\r\n                <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                    {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\r\n                        key=\"options\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        theme={this.state.themeType}\r\n                        onError={text => this.setState({errorText: text})}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                        roles={roles}\r\n                    />)}\r\n                    {this.state.selectedTab === 'objects' && <TabObjects\r\n                        key=\"objects\"\r\n                        common={this.common}\r\n                        native={this.state.native}\r\n                        socket={this.socket}\r\n                        themeType={this.state.themeType}\r\n                        theme={this.state.theme}\r\n                        onError={text => this.setState({errorText: text})}\r\n                        instance={this.instance}\r\n                        adapterName={this.adapterName}\r\n                    />}\r\n                </div>\r\n                {this.renderError()}\r\n                {this.renderSaveCloseButtons()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'consumption';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App common={{}}\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}